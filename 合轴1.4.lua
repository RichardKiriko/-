local tr = aegisub.gettext
script_name = tr("合轴")
script_description = tr("合轴")
script_author = "kiriko"
script_version = "1.0"



function merge_ass(subs)
	
	local convert_time = function(ass_ms)
		local h,m,s,ms=ass_ms:match("^(%d+):(%d%d):(%d%d)%.(%d%d)$")
		if h and m and s and ms then 
			return h * 3600000 + m * 60000 + s * 1000 + ms * 10
		else
			error("ass type time expected", 2)
		end
	end
	
	local in_or_not=function(tbl,value)
		for k,v in ipairs(tbl) do
			if value == v then
				return true
			end
		end
		return false
	end
	
	local tbl_insert=function(tbl,value)
		local result = true
		for k,v in ipairs(tbl) do
			if v == value then
				result = false
				break
			end
		end
		if result then
			table.insert(tbl,value)
		end
	end
	
	local input_files={}
	local output_file=""
	repeat
		all_gui={
			{class="label",x=1,y=0,width=3,height=1,label="输入文件数:"..#input_files},
			{class="label",x=1,y=1,width=1,height=1,label="输入文件列表"},
			{class="dropdown",x=1,y=2,width=6,height=1,name="file",items=input_files,value=input_files[1]},
			{class="label",x=1,y=3,width=1,height=1,label="文件保存至:"},
			{class="edit",x=2,y=3,width=10,height=1,name="output",value=output_file},
			{class="checkbox",x=1,y=4,width=1,height=1,name="delete_style",value=true,label="删除未使用的样式"},
			{class="checkbox",x=1,y=5,width=1,height=1,name="comment",value=false,label="忽略注释行",hint="注释行将不会被复制"}
			}
		gui_res,gui_config = aegisub.dialog.display(all_gui,{"OK","Input","Output","Cancel"})
		if gui_res == "Input" then
			input_files=aegisub.dialog.open("input ass file","","","ass file (.ass)|*.ass", true, true)
		elseif gui_res == "Output" then
			output_file=aegisub.dialog.save("save file","","","ass file (.ass)|*.ass",false)
		end
	until gui_res ~= "Output" and gui_res ~= "Input"
	output_file=gui_config.output
	if gui_res ~= "OK" then
		aegisub.cancel()
	end	

	if #input_files > 0 and output_file ~= "" then
		local files_tbl={}
		local PlayResX={}
		local PlayResY={}
		
		for i,file in ipairs(input_files) do

			local dialogue_lines={}
			local comment_lines={}
			local fx_lines={}
			local styles={}
			input_file=io.open(file,"r")
			
			for line in input_file:lines() do
				if line:find("^PlayResX") then
					tbl_insert(PlayResX,line:match("%d+$"))
				elseif line:find("^PlayResY") then
					tbl_insert(PlayResY,line:match("%d+$"))
				elseif line:find("^Style:") then
					local name,text = line:match("^Style: (.-)(,.*)$")
					table.insert(styles,{name=name,text=text})
				elseif line:find("^Dialogue:") then
					local start_time, end_time, effect = line:match("^.-: %d+,(%d:%d%d:%d%d%.%d%d),(%d:%d%d:%d%d%.%d%d),.-,.-,.-,.-,.-,(.-),.*$")
					local front, style, behind = line:match("^(.-: %d+,%d:%d%d:%d%d%.%d%d,%d:%d%d:%d%d%.%d%d,)(.-)(,.*)$")
					if effect == "fx" then
						table.insert(fx_lines,{start_time=convert_time(start_time), end_time=convert_time(end_time), front=front, style=style, behind=behind})
					else
						table.insert(dialogue_lines,{start_time=convert_time(start_time), end_time=convert_time(end_time), front=front, style=style, behind=behind})
					end
				elseif line:find("^Comment:") then
					local start_time, end_time, effect = line:match("^.-: %d+,(%d:%d%d:%d%d%.%d%d),(%d:%d%d:%d%d%.%d%d),.-,.-,.-,.-,.-,(.-),.*$")
					local front, style, behind = line:match("^(.-: %d+,%d:%d%d:%d%d%.%d%d,%d:%d%d:%d%d%.%d%d,)(.-)(,.*)$")
					if not effect:find("^template") and (not effect:find("^code")) then
						table.insert(comment_lines,{start_time=convert_time(start_time), end_time=convert_time(end_time), front=front, style=style, behind=behind})
					end
				end
			end
			table.insert(files_tbl,{styles=styles,dialogue_lines=dialogue_lines,comment_lines=comment_lines,fx_lines=fx_lines})
			input_file:close()
		end
		
		output=io.open(output_file,"w+")
		--文件头部信息
		output:write("[Script Info]\n; Script generated by Aegisub r8732\n; http://www.aegisub.org/\nTitle: Default Aegisub file\nScriptType: v4.00+\nWrapStyle: 0\nScaledBorderAndShadow: yes\nYCbCr Matrix: None\n")
		--脚本分辨率（若不一致/未正确收集到则需手动设定）
		if #PlayResX ~= 1 or #PlayResY ~= 1 then
			playres_gui={
						{class="label",x=1,y=0,width=10,height=1,label="脚本分辨率不一致，请设定脚本分辨率"},
						{class="edit",x=1,y=1,width=1,height=1,name="resx",value=PlayResX[1] or 1280},
						{class="label",x=2,y=1,width=1,height=1,label="×"},
						{class="edit",x=3,y=1,width=1,height=1,name="resy",value=PlayResY[1] or 720}
						}
			playres_r,playres =_G.aegisub.dialog.display(playres_gui,{"OK","Cancel"})
			output:write("PlayResX: "..playres.resx.."\n")
			output:write("PlayResY: "..playres.resy.."\n")
		else
			output:write("PlayResX: "..PlayResX[1].."\n")
			output:write("PlayResY: "..PlayResY[1].."\n")
		end
		
		if playres_r == "Cancel" then
			aegisub.cancel()
		end
		
		--样式表合并
		local all_styles={}
		local r={}
		for k,file_tbl in ipairs(files_tbl) do
			for j,style in ipairs(file_tbl.styles) do
				local res=0
				local r_name=""
				for g,v in ipairs(all_styles) do
					if style.name == v.name then
						if  style.text ~= v.text then
							res=2
							if r[v.name] then
								r[v.name]=r[v.name]+1
							else
								r[v.name]=1
							end
							r_name=style.name.."["..r[v.name].."]"
							for i=1,#all_styles do
								if style.name == all_styles[i].old_name and style.text == all_styles[i].text then
									res=3
									r_name=all_styles[i].name
									break
								end
							end
						else 
							res=1
						end
						break
					end
				--elseif style.name == v.old_name and style.text == v.text
				end
				if res == 0 then
					table.insert(all_styles,style)
				elseif res == 2 or res == 3 then
					for dli = 1,#file_tbl.dialogue_lines do
						if file_tbl.dialogue_lines[dli].style == style.name then
							files_tbl[k].dialogue_lines[dli].style=r_name
						end
					end
					for cli = 1,#file_tbl.comment_lines do
						if file_tbl.comment_lines[cli].style == style.name then
							files_tbl[k].comment_lines[cli].style=r_name
						end
					end
					for fli = 1,#file_tbl.fx_lines do
						if file_tbl.fx_lines[fli].style == style.name then
							files_tbl[k].fx_lines[fli].style=r_name
						end
					end
					if res == 2 then
						table.insert(all_styles,{name=r_name,text=style.text,old_name=style.name})
					end
				end
			end
		end
		
		local used_styles={}
		if gui_config.delete_style then
			for k,file_tbl in ipairs(files_tbl) do
				for dli = 1,#file_tbl.dialogue_lines do
					tbl_insert(used_styles,file_tbl.dialogue_lines[dli].style)
				end
				for fli = 1,#file_tbl.fx_lines do
					tbl_insert(used_styles,file_tbl.fx_lines[fli].style)
				end
				if not gui_config.comment then
					for cli = 1,#file_tbl.comment_lines do
						tbl_insert(used_styles,file_tbl.comment_lines[cli].style)
					end
				end
			end
		end
		
		output:write("\n[V4+ Styles]\n")
		output:write("Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\n")
		for k,style in ipairs(all_styles) do
			if (not gui_config.delete_style) or in_or_not(used_styles,style.name) then
				output:write("Style: "..style.name..style.text.."\n")
			end
		end
		
		output:write("\n[Events]\nFormat: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text\n")
		
		local time_to_ass=function(ass_ms)
			return string.format("%d:%02d:%02d.%02d",math.floor(ass_ms / 3600000) % 10,math.floor(ass_ms % 3600000 / 60000),math.floor(ass_ms % 60000 / 1000),math.floor(ass_ms % 1000 / 10))
		end
		
		
		for k,file_tbl in ipairs(files_tbl) do
			local start_t=0
			local end_t=0
			for g,line in ipairs(file_tbl.dialogue_lines) do
				if g == 1 then
					start_t=line.start_time
					end_t=line.end_time
				else
					start_t=math.min(line.start_time,start_t)
					end_t=math.max(line.end_time,end_t)
				end
			end
			if not gui_config.comment then
				for g,line in ipairs(file_tbl.comment_lines) do
					start_t=math.min(line.start_time,start_t)
					end_t=math.max(line.end_time,end_t)
				end
			end
			if start_t > 10 then
				start_t=start_t-10
			else
				start_t=0
			end
			if end_t > 10 then
				end_t=end_t-10
			else
				end_t=0
			end
			if #file_tbl.dialogue_lines > 0 then
				table.insert(files_tbl[k].dialogue_lines,{start_time=start_t, end_time=start_t, front="Comment: 0,"..time_to_ass(start_t)..","..time_to_ass(start_t)..",", style=used_styles[1], behind=",↓↓↓,0,0,0,,-↓-↓-↓-↓-↓-↓-↓-↓-↓-↓-↓-↓-↓-↓-↓-↓-↓-↓-↓-↓-"})
				table.insert(files_tbl[k].dialogue_lines,{start_time=end_t, end_time=end_t, front="Comment: 0,"..time_to_ass(end_t)..","..time_to_ass(end_t)..",", style=used_styles[1], behind=",↑↑↑,0,0,0,,-↑-↑-↑-↑-↑-↑-↑-↑-↑-↑-↑-↑-↑-↑-↑-↑-↑-↑-↑-↑-"})
			end
		end
		
		local tbl_num=function(tbl,value)
			local num=1
			for k,v in ipairs(tbl) do
				if value > v.num then
					num=num+1
				end
			end
			return num
		end
		
		local final_lines={}
		for k,file_tbl in ipairs(files_tbl) do
			for g,line in ipairs(file_tbl.dialogue_lines) do
				table.insert(final_lines,tbl_num(final_lines,line.start_time),{num=line.start_time,text=line.front..line.style..line.behind})
			end
			if not gui_config.comment then
				for g,line in ipairs(file_tbl.comment_lines) do
					table.insert(final_lines,tbl_num(final_lines,line.start_time),{num=line.start_time,text=line.front..line.style..line.behind})
				end
			end
		end
		for k,file_tbl in ipairs(files_tbl) do
			for g,line in ipairs(file_tbl.fx_lines) do
				table.insert(final_lines,{num=line.start_time,text=line.front..line.style..line.behind})
			end
		end
		
		for k,line in ipairs(final_lines) do
			output:write(line.text.."\n")
		end
		
		output:close()
	else
		error("no input or output")
	end
end

aegisub.register_macro(script_name, script_description, merge_ass)